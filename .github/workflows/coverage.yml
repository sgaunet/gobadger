name: Generate coverage badges
on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  generate-badges:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      # setup go environment
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24.x
  
      - name: coverage
        id: coverage
        run: |
          go mod download
          # Run unit tests for internal packages
          go test ./internal/... -coverprofile=unit.cov -coverpkg=./internal/...
          # Build binary with coverage instrumentation
          CGO_ENABLED=0 go build -cover -o gobadger-coverage .
          # Create coverage directory for integration tests
          mkdir -p coverage
          # Run CLI integration tests with coverage
          GOCOVERDIR=./coverage ./gobadger-coverage -t "Build" -v "Passing" -o "test1.svg"
          test -f test1.svg && grep -q "<svg" test1.svg || (echo "Badge generation failed" && exit 1)
          GOCOVERDIR=./coverage ./gobadger-coverage -t "Coverage" -v "95%" -c "#4c1" -o "test2.svg"
          test -f test2.svg && grep -q "<svg" test2.svg || (echo "Custom color badge failed" && exit 1)
          # Test error cases (these should fail)
          GOCOVERDIR=./coverage ./gobadger-coverage -v "Passing" || true
          GOCOVERDIR=./coverage ./gobadger-coverage -t "Build" || true
          GOCOVERDIR=./coverage ./gobadger-coverage || true
          # Test help flag
          GOCOVERDIR=./coverage ./gobadger-coverage -h || true
          # Convert binary coverage data to profile
          go tool covdata textfmt -i=./coverage -o integration.cov
          # Use integration test coverage as the primary metric
          total=$(go tool cover -func integration.cov | grep '^total:' | awk '{print $3}' | sed 's/%//')
          # Cleanup
          rm -f unit.cov integration.cov gobadger-coverage test1.svg test2.svg
          rm -rf ./coverage
          echo "COVERAGE_VALUE=${total}" >> $GITHUB_ENV

      - uses: actions/checkout@v5
        with:
          repository: sgaunet/gh-action-badge
          path: gh-action-badge
          ref: main
          fetch-depth: 1

      - name: Generate coverage badge
        id: coverage-badge
        uses: ./gh-action-badge/.github/actions/gh-action-coverage
        with:
          limit-coverage: "40"
          badge-label: "coverage"
          badge-filename: "coverage-badge.svg"
          badge-value: "${COVERAGE_VALUE}"

      - name: Print url of badge
        run: |
          echo "Badge URL: ${{ steps.coverage-badge.outputs.badge-url }}"